# -*- coding: utf-8 -*-
"""Using Data Analysis for Detecting Credit Card Fraud.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f2-NM8MaNy2rRyoY-DwP60Ucj4MlG0aF
"""

import pandas as pd
import matplotlib.pyplot as plt

data = [
    {"IP Address":"3.56.123.0", "User ID":"johnp",  "Account Number":25671147, "Age":32, "Shipping Address":"1542, Orchid Lane, WA 98706, US", "Transaction Date":"2020-05-15", "Transaction Time":"15:00:05", "Transaction Value":121.58, "Product Category":"Clothing", "Units Purchased":1},
    {"IP Address":"3.56.123.0", "User ID":"johnp",  "Account Number":25671147, "Age":32, "Shipping Address":"1542, Orchid Lane, WA 98706, US", "Transaction Date":"2020-06-10", "Transaction Time":"10:23:10", "Transaction Value":79.23,  "Product Category":"Electronics", "Units Purchased":2},
    {"IP Address":"3.56.123.0", "User ID":"johnp",  "Account Number":25671147, "Age":32, "Shipping Address":"1542, Orchid Lane, WA 98706, US", "Transaction Date":"2020-06-01", "Transaction Time":"07:12:45", "Transaction Value":39.95,  "Product Category":"Home DÃ©cor", "Units Purchased":1},
    {"IP Address":"1.186.52.7","User ID":"johnp",  "Account Number":25671147, "Age":32, "Shipping Address":"In-store", "Transaction Date":"2020-06-02", "Transaction Time":"01:11:10", "Transaction Value":2009.99, "Product Category":"Electronics", "Units Purchased":10},
    {"IP Address":"1.186.52.7","User ID":"johnp",  "Account Number":25671147, "Age":32, "Shipping Address":"In-store", "Transaction Date":"2020-06-03", "Transaction Time":"01:15:12", "Transaction Value":4131.00, "Product Category":"Electronics", "Units Purchased":15},
    {"IP Address":"1.58.167.2","User ID":"davidg", "Account Number":51422789, "Age":47, "Shipping Address":"90 Robinson Blvd, Alberta, 97602, Canada", "Transaction Date":"2020-05-15", "Transaction Time":"17:02:08", "Transaction Value":234.20, "Product Category":"Furniture", "Units Purchased":1},
    {"IP Address":"1.58.167.2","User ID":"davidg", "Account Number":51422789, "Age":47, "Shipping Address":"90 Robinson Blvd, Alberta, 97602, Canada", "Transaction Date":"2020-05-18", "Transaction Time":"19:12:45", "Transaction Value":141.00, "Product Category":"Kitchen Supplies", "Units Purchased":3},
    {"IP Address":"1.58.167.2","User ID":"davidg", "Account Number":51422789, "Age":47, "Shipping Address":"90 Robinson Blvd, Alberta, 97602, Canada", "Transaction Date":"2020-06-01", "Transaction Time":"17:34:15", "Transaction Value":157.25, "Product Category":"Car Spares", "Units Purchased":2},
    {"IP Address":"1.58.167.2","User ID":"davidg", "Account Number":51422789, "Age":47, "Shipping Address":"90 Robinson Blvd, Alberta, 97602, Canada", "Transaction Date":"2020-06-13", "Transaction Time":"18:02:10", "Transaction Value":59.99, "Product Category":"Kitchen Supplies", "Units Purchased":1},
    {"IP Address":"172.165.10.1","User ID":"ellend", "Account Number":11565828, "Age":28, "Shipping Address":"P.O. Box 1322", "Transaction Date":"2020-06-07", "Transaction Time":"15:53:12", "Transaction Value":99.99, "Product Category":"Clothing", "Units Purchased":1},
    {"IP Address":"172.165.10.1","User ID":"ellend", "Account Number":11565828, "Age":28, "Shipping Address":"P.O. Box 1322", "Transaction Date":"2020-06-08", "Transaction Time":"17:15:30", "Transaction Value":53.15, "Product Category":"Beauty", "Units Purchased":1},
    {"IP Address":"1.167.255.10","User ID":"ellend","Account Number":11565828, "Age":28, "Shipping Address":"P.O. Box 5401", "Transaction Date":"2020-07-02", "Transaction Time":"00:05:10", "Transaction Value":4895.00, "Product Category":"Laptop", "Units Purchased":1},
]

df = pd.DataFrame(data)

df['Transaction Date'] = pd.to_datetime(df['Transaction Date'], errors='coerce')

important_data_points = [
    "Transaction Value", "IP Address + geolocation", "Shipping address vs billing",
    "Transaction timestamp (velocity)", "User ID / Account number"
]
data_issues = [
    "Inconsistent time formats", "Ambiguous shipping addresses", "Possible IP reuse or logging errors"
]
anomalies = [
    "Large spikes in spend for single accounts", "High-quantity purchases in short intervals"
]

print("Important data points:", important_data_points)
print("Potential data issues:", data_issues)
print("Anomalies:", anomalies)

grouped = df.groupby('User ID')['Transaction Value'].sum().sort_values(ascending=False)
grouped.plot(kind='bar', figsize=(8,4))
plt.title('Total Transaction Value per User')
plt.xlabel('User ID')
plt.ylabel('Total Transaction Value (USD)')
plt.tight_layout()
plt.show()

